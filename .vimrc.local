" Leader
let mapleader = ","

" Set terminal title
set title

" http://statico.github.io/vim.html
:nmap ; :CtrlPBuffer<CR>

" Ignore case when searching
set ignorecase

" 50 isn't enough
set history=99

" Ignore case if search is lowercase, otherwise case-sensitive
set smartcase

" Easier save mapping
nnoremap W :update<CR>

" Fuck you E
nnoremap E :view<CR>

command! -bang Q q<bang>
command! -bang W w<bang>

" Highlight VCS conflict markers
match ErrorMsg '^\(<\|=\|>\)\{7\}\([^=].\+\)\?$'

" Unfuck my screen
nnoremap U :syntax sync fromstart<CR>:redraw!<CR>

" Enable using the mouse if terminal emulator
set mouse=r

" Map escape to jj for testing
inoremap jj <ESC>

" http://andrew.stwrt.ca/posts/vim-ctags/
" Vim + Ctags + Ctrlp
nnoremap <leader>. :CtrlPTag<cr>

" Vim + Ctags + Tagbar
nnoremap <silent> <Leader>b :TagbarToggle<CR>

" Toggle Tagbar
nmap <F8> :TagbarToggle<CR>

" Remap visual escape key
vno v <esc>

" Color scheme
colorscheme Tomorrow-Night-Eighties
highlight NonText guibg=#060606

" Autosave
:au FocusLost * silent! wa

" Rename files from within vim
function! RenameFile()
    let old_name = expand('%')
    let new_name = input('New file name: ', expand('%'), 'file')
    if new_name != '' && new_name != old_name
        exec ':saveas ' . new_name
        exec ':silent !rm ' . old_name
        redraw!
    endif
endfunction
map <leader>n :call RenameFile()<cr>


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" OpenChangedFiles COMMAND
" Open a split for each dirty file in git
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! OpenChangedFiles()
  only " Close all windows, unless they're modified
  let status = system('git status -s | grep "^ \?\(M\|A\|UU\)" | sed "s/^.\{3\}//"')
  let filenames = split(status, "\n")
  exec "edit " . filenames[0]
  for filename in filenames[1:]
    exec "sp " . filename
  endfor
endfunction
map <leader>cf :call OpenChangedFiles()<cr>

" RSpec.vim mappings
map <Leader>t :call RunCurrentSpecFile()<CR>
map <Leader>s :call RunNearestSpec()<CR>
map <Leader>l :call RunLastSpec()<CR>
map <Leader>a :call RunAllSpecs()<CR>

" Thanks Sean Huber!
" Copy line or highlighted contents to system clipboard
nmap <Leader>y V<Leader>y
vmap <Leader>y mm"+y<cr>`m

" this one is broken tho
" Enable paste mode, paste from system clipboard, then disable paste mode
nmap <Leader>p mm:set paste<cr>"+p`mJx

" go back to last file
map <Leader><Leader> :e# <cr>
